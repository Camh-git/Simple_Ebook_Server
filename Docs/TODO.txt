This should really be a trello/zenhub board

Remaining:

  Major:
	Modify CSS to allow decent mobile use
	add password authentication

  Feature additions:
	Implement Epub reader
	Implement a reader for simple txt files
	Implement Mobi reader
	Implement HTML reader

  Feature changes:
  	Add a script to populate the thumbnail cache (probably calling google books)
	Change upload scripts from php to python
	Make the reader and download button blocking work

  Minor/ technical :	
	
	go through the js and add cammel case/ generaly tidy up
	set constant vars(not just const) where appropriate, apply screaming snake case
	see if it is possible to do without the extension paramaters on the api by using the basenames directly (complicated due to )
	Add a way to cache the settings so they dont have to be called every req, implement security and make sure they get updated on change and load
	Find a way to make the address available project wide(prob settings), since it is hardcoded in a few places. (prob a seperate call api function, lots of opt args)
	create a shared function for seperating filenames and extensions and comparing them in js
	Look into implementing folders for the thumbnail cache, would improve organisation and reduce risk of conflicts
	Go through set_management listeners and set the relevant vars to use folder values so that the book dropdowns can drop the extensions, replace index based select
	Find a method of breaking down the management page into less of a monalith (WIP)	- needs debugging with the event handlers not being set sometimes
	Invert the for stack in pop_manage_selects and add an event listener so that the thumb list gets updated like the book list
	Tidy up/ segment the css
	
  Notes:
	Thumbnails will probably use the google books api to get images
	Example thumbnail map obj: {"Folder":"","Name":"","Thumb":""}

Completed:
	Convert the library to 4 collumns instead of 3
	populate the management page's select elements using the library's contents
	add kebab case for CSS
	Populate management with basic crud commands
	setup api
	setup api calls from the management page 
	Populate management with basic crud commands
	Modify manage acls route to only take the actual values call_endpoints sends
	Modify endpoints to handle not having optional values provided
	add update dir and show ip lists options for call_and_display
	move management php/js to other files, make the folder and book select js names more sensible
	Maybe find a way to remove the stacking Populate_management_selects.js script tags on the management that happens when the selects are updated
	add an option to the clear x endpoints to allow keeping of manualy uploaded files
	add user feedback when an API request goes through - and fetch the new books list so that the dropdowns remain synced
	add security to fetch settings
	modify reasign-thumb endpoint to add a new entry if a book without a thumbnail already assigned is entered
	figure out why book_collection nests itself within the thumbnail select	- was missing close tags
	Move the pages to the pages folder
	Add a start guide to the readme
	Attempt to fix changelog and credits
	update append h&f
	Convert the book and thumb lists (and thumb map) to return json, updated their handlers in management and library, they currently copy the old php approach, rm old endpoints
	when "no selection" is chosen on a folder select make sure the book select says the same (coincidental to the above change)
	Add a rename endpoint for Thumbnails
	Modify library to use dropdowns instead of full lists if there are more then 5 folders (misc, uploads and 3 custom)
	Investigate why the IP restriction toggles dont return text
	figure out why Populate_management_selects errors when a folder select without a book select is changed(was checking the list which would always be typeof object, change to check the first value).

The server is located at: http://192.168.0.110/Simple_Ebook_Server/index.html
The books folder is located at: web root/Simple_Ebook_server/Books