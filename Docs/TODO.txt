This should really be a trello/zenhub board

Remaining:

  Major:
	Modify CSS to allow decent mobile use
	add password authentication

  Feature additions:
	Implement Epub reader
	Implement a reader for simple txt files
	Implement Mobi reader
	Implement HTML reader

  Feature changes:
  	Add a script to populate the thumbnail cache (probably calling google books)
	Change upload scripts from php to python
	Make the reader and download button blocking work

  Minor/ technical:	
	go through the js and add cammel case/ generaly tidy up
	set constant vars(not just const) where appropriate, apply screaming snake case
	create a shared function for seperating filenames and extensions and comparing them in js
	Go through set_management listeners and set the relevant vars to use folder values so that the book dropdowns can drop the extensions, replace index based select
	Find a method of breaking down the management page into less of a monalith (WIP)	- needs debugging with the event handlers not being set sometimes
	Tidy up/ segment the css
	add some proper testing
	modify book data.json when a book/folder is uploaded or changed
	investigate why the continue in gen_book_data is being ignored
	attempt to extract isbns from each of the file formats for use in the book data generator, should improve accuracy
	add safeties to any form that deletes data
	create an inventory of python packages needed
	go through set_management_listeners (and prob other js) and set consts where appropriate
	Make delete_folder remove the associated thumbnail cache
	convert the looping gen book data and book upload to use search_google_books, once it is made functional
	add a create thummb folder book data endpoint to create folder (and probably to upload folder too), delete folder also needs the inverse (might be best to double check all book data functions)
	have an API util that lets the methods read the Source of truth for file types, should replace localy defined ALLOWED_FILES variables (for the uploads this can be done with the selective upload util)
	Fix file support endpoint
	implement selective upload for upload book (in upload_folder, prob move the function to api utils)
	 


  Not confirmed/Under consideration:
	move book list updates to the same method as thumb updates, since updating the books when the list is changed seems more sensible (and reduces the total number of listeners)
	see if it is possible to do without the extension paramaters on the api by using the basenames directly (possibly like /rename-thumb)
	Add a way to cache the settings so they dont have to be called every req, implement security and make sure they get updated on change and load
	Look into implementing folders for the thumbnail cache, would improve organisation and reduce risk of conflicts
	add a filter to requests to block any that have <script , <?php, or any other suspicous xss style content
	general input sanitisation
	add an api util to load the book info and replace the current approach with repeated code (currently in thumb_management)
	add a seperate thumnbnails object/ structure to book_data, so that unasigned thumbs can be added to management dropdowns, use this as the main
		 mechanism for thumb changes and update books acordingly, use it for populating management thumb selects
	add a system to dynamicaly create the library collums based on the number of books and center the last line
	Maybe add the setIp form to library as well
	consider removing the book title spaces warning.
	try to combine the event listeners
	
  Notes:
	Example thumbnail map obj: {"Folder":"","Name":"","Thumb":""}

Completed:
	Convert the library to 4 collumns instead of 3
	populate the management page's select elements using the library's contents
	add kebab case for CSS
	Populate management with basic crud commands
	setup api
	setup api calls from the management page 
	Populate management with basic crud commands
	Modify manage acls route to only take the actual values call_endpoints sends
	Modify endpoints to handle not having optional values provided
	add update dir and show ip lists options for call_and_display
	move management php/js to other files, make the folder and book select js names more sensible
	Maybe find a way to remove the stacking Populate_management_selects.js script tags on the management that happens when the selects are updated
	add an option to the clear x endpoints to allow keeping of manualy uploaded files
	add user feedback when an API request goes through - and fetch the new books list so that the dropdowns remain synced
	add security to fetch settings
	modify reasign-thumb endpoint to add a new entry if a book without a thumbnail already assigned is entered
	figure out why book_collection nests itself within the thumbnail select	- was missing close tags
	Move the pages to the pages folder
	Add a start guide to the readme
	Attempt to fix changelog and credits
	update append h&f
	Convert the book and thumb lists (and thumb map) to return json, updated their handlers in management and library, they currently copy the old php approach, rm old endpoints
	when "no selection" is chosen on a folder select make sure the book select says the same (coincidental to the above change)
	Add a rename endpoint for Thumbnails
	Modify library to use dropdowns instead of full lists if there are more then 5 folders (misc, uploads and 3 custom)
	Investigate why the IP restriction toggles dont return text
	figure out why Populate_management_selects errors when a folder select without a book select is changed(was checking the list which would always be typeof object, change to check the first value).
	Invert the for stack in pop_manage_selects and add an event listener so that the thumb list gets updated like the book list
	add a file support table at /support
	add a table of endpoints at /help
	add json single source of truth for file support info
	create server IP util, add server IP form when the "api offline" message is showing to set the server IP(check by calling sanity check endpoint).
	Find a way to make the address available project wide, since it is hardcoded in a few places. (Done using cookie, or local address on the API)
	Fixed module issue in pop_manage_selects.js, made a similar script specificaly for updating the lists (removed setup and IP, clears listeners, options to skip call to list that wasn't updated)
	create a single general data call util, similar to call_and_display, but for endpoints returning json instead of http codes to interpret.
	add a site map at /map
	Add a system to modify the stored book data
	Add a script to populate the thumbnail cache (probably calling google books)
	Have the thumbnail fetching service download the images and set the local path as the url
	replace thumb_map with book_data updates/ thumb return
	incorportate the book's extension into the book data
	simplify the book/folder management select update process(now the submit handlers tell call_and_display to run update_management selects on all requests that need it)

The server is located at: http://192.168.0.110/Simple_Ebook_Server/index.html
The books folder is located at: web root/Simple_Ebook_server/Books